# RTRTR for testing.
#
# ===== WARNING === WARNING === WARNING === WARNING === WARNING =====
#
# This configuration is for testing only. It will not produce any
# reasonable output if used in a production setup.
#
# ===== WARNING === WARNING === WARNING === WARNING === WARNING =====

log_level = "debug"
log_target = "stderr"
log_facility = "daemon"
log_file = "/var/log/rtrtr.log"

http-listen = ["127.0.0.1:8080"]

[units.rtr-3323]
type = "rtr"
remote = "localhost:3323"

[units.rtr-3324]
type = "rtr"
remote = "localhost:3324"

[units.rtr-tls-9323]
type = "rtr-tls"
remote = "localhost:9323"
cacerts = [ "localhost.crt" ]

[units.rtr-tls-loop]
type = "rtr-tls"
remote = "localhost:9325"
cacerts = [ "localhost.crt" ]

[units.json-8323]
type = "json"
uri = "http://localhost:8323/json"
refresh = 60

[units.json-routinator]
type = "json"
uri = "https://routinator.do.nlnetlabs.nl/json"
refresh = 10

[units.empty]
type = "json"
uri = "file:empty.json"
refresh = 10

[units.any-rtr]
type = "any"
sources = [ "rtr-3323", "rtr-3324", "rtr-tls-9323", "empty" ]
random = false

[units.any-any]
type = "any"
sources = [ "any-rtr", "json-8323", "json-routinator" ]
random = false

[units.any-rtr-exceptions]
type = "slurm"
source = "any-rtr"
files = [ "exceptions.json" ]

[units.any-any-exceptions]
type = "slurm"
source = "any-any"
files = [ "exceptions.json" ]

[targets.rtr-3325]
type = "rtr"
listen = [ "127.0.0.1:3325" ]
unit = "any-any-exceptions"
history-size = 12

[targets.rtr-tls-9325]
type = "rtr-tls"
listen = [ "127.0.0.1:9325" ]
unit = "any-any-exceptions"
certificate = "localhost.crt"
key = "localhost.key"

[targets.rtr-tls-loop]
type = "rtr-tls"
listen = [ "127.0.0.1:9326" ]
unit = "rtr-tls-loop"
certificate = "localhost.crt"
key = "localhost.key"
history-size = 12

[targets.http-json]
type = "http"
path = "/json"
format = "json"
unit = "any-rtr-exceptions"

[targets.http-json-loop]
type = "http"
path = "/loop"
format = "json"
unit = "rtr-tls-loop"

